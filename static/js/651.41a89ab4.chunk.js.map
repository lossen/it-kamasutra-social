{"version":3,"file":"static/js/651.41a89ab4.chunk.js","mappings":"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","sources":["webpack://it_kamasutra/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://it_kamasutra/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://it_kamasutra/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hocs/WithRouter/WithRouter.js","components/hocs/withAuthRedirect/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__QG8TK\",\"topCoverImageWrapper\":\"ProfileInfo_topCoverImageWrapper__VFBia\",\"topCoverImage\":\"ProfileInfo_topCoverImage__BGV12\"};","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = (props) => {\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [status, setStatus] = useState(props.profileStatus);\n\n    useEffect(() => {\n        setStatus(props.profileStatus)\n\n    },[props.profileStatus])\n\n    const toggleEditMode = () => {\n        setIsEditMode(!isEditMode)\n    }\n\n    const onChangeStatus = (e) => {\n        setStatus(e.target.value)\n    }\n\n    const handleBlur = () => {\n        if(status !== props.profileStatus){\n            props.updateProfileStatus(status)\n        }\n        toggleEditMode()\n    }\n\n    return (\n        <>\n            {isEditMode\n                ? <div><input autoFocus onBlur={handleBlur} value={status}\n                              onChange={onChangeStatus}/></div>\n                : <div><span onDoubleClick={toggleEditMode}>Status: {status || '-----'}</span></div>}\n        </>\n\n\n    )\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Loader from \"../../common/Loader/Loader\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = (props) => {\n    if(!props.profile) return <Loader isFetching={true}/>\n    return (\n        <div className={classes.profileInfo}>\n            <div className={classes.topCoverImageWrapper}>\n                <img className={classes.topCoverImage} src=\"https://images.unsplash.com/photo-1586184059891-09ad2a30f3ce?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2148&q=80\" alt=\"\"/>\n            </div>\n            <div>\n                <img src={props.profile.photos.small} alt=\"avatar\"/>\n                About me\n                <ProfileStatus profileStatus={props.profileStatus} updateProfileStatus={props.updateProfileStatus}/>\n\n                <div>\n                    {props.profile.aboutMe}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__MZdg2\",\"active\":\"MyPosts_active__jpVbi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"flexCol\":\"Post_flexCol__QQyIp\",\"active\":\"Post_active__Rxs1A\",\"postBox\":\"Post_postBox__79yNJ\",\"avatar\":\"Post_avatar__J150j\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n    let {body} = props.data;\n    return (\n        <div className={classes.item}>\n            <div className={classes.avatar}>\n                <img src=\"https://images.unsplash.com/photo-1541840524505-3d825592d8ac?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=987&q=80\" alt=\"\"/>\n            </div>\n            <div className={classes.flexCol}>\n                <div className={classes.postBox}>\n                    {body}\n                </div>\n                <div>\n                    <button>Like </button>\n                    {props.like_counts} likes\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Post;\n","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../common/Forms/FormControls\";\n\nconst MyPosts = (props) => {\n\n    const onAddPost = (formData) => {\n        console.log(formData,'formData')\n        props.addPostThunkCreator(formData.newPost)\n    }\n\n    return (\n        <div>\n            My posts\n            <WithReduxFormAddNewPost onSubmit={onAddPost}/>\n            <div className={`${classes.item} ${classes.active}`}>New post</div>\n            {props.posts.map(p => <Post data={p}/>)}\n        </div>\n    )\n}\nconst AddNewPostForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newPost\" component={Textarea} validate={required}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nlet WithReduxFormAddNewPost = reduxForm({\n    form: 'addPost'\n})(AddNewPostForm)\nexport default MyPosts;","import {addPostThunkCreator} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n    posts: state.profilePage.posts,\n})\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPostThunkCreator\n})(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <main className=\"content\">\n            <ProfileInfo profile={props.profile} profileStatus={props.profileStatus}\n                         updateProfileStatus={props.updateProfileStatus}/>\n            <MyPostsContainer store={props.store}/>\n        </main>\n\n    )\n}\n\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getProfileDataThunkCreator,\n    getProfileStatusThunkCreator,\n    setProfileStatusThunkCreator,\n    setUserProfile\n} from \"../../redux/profileReducer\";\nimport {withRouter} from \"../hocs/WithRouter/WithRouter\";\nimport withRedirect from \"../hocs/withAuthRedirect/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n\n    useEffect(() => {\n        getProfileData()\n    },[])\n    const getProfileData = () => {\n        let userId = props.params.user_id;\n        if(!userId) userId = props.userId;\n        props.getProfileDataThunkCreator(userId)\n        props.getProfileStatusThunkCreator(userId)\n    }\n    const updateProfileStatus = (status) => {\n        props.setProfileStatusThunkCreator(status)\n    }\n\n    return(\n        <Profile {...props} profile={props.profile}\n                 updateProfileStatus={updateProfileStatus}/>\n    )\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    profileStatus: state.profilePage.profileStatus,\n    userId: state.auth.userId,\n})\n\nexport default compose(\n    connect(mapStateToProps,{\n        setUserProfile,\n        getProfileDataThunkCreator,\n        getProfileStatusThunkCreator,\n        setProfileStatusThunkCreator\n    }),\n    withRedirect,\n    withRouter\n)(ProfileContainer);","import React from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\nexport const  withRouter = (Component) => {\n    return props => <Component {...props} navigate={useNavigate()} params={useParams()} />;\n}","import React from 'react';\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component{\n        render() {\n            if(!this.props.isAuth) return <Navigate to={\"/login\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n    return connect(mapStateToProps)(RedirectComponent);\n}\n\nexport default withAuthRedirect;"],"names":["props","useState","isEditMode","setIsEditMode","profileStatus","status","setStatus","useEffect","toggleEditMode","autoFocus","onBlur","updateProfileStatus","value","onChange","e","target","onDoubleClick","profile","className","classes","src","alt","photos","small","aboutMe","Loader","isFetching","body","data","like_counts","WithReduxFormAddNewPost","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","formData","console","log","addPostThunkCreator","newPost","posts","map","p","connect","state","profilePage","MyPosts","store","compose","userId","auth","setUserProfile","getProfileDataThunkCreator","getProfileStatusThunkCreator","setProfileStatusThunkCreator","withRedirect","Component","navigate","useNavigate","params","useParams","getProfileData","user_id","mapStateToProps","isAuth","RedirectComponent","this","to","React"],"sourceRoot":""}