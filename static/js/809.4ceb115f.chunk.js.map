{"version":3,"file":"static/js/809.4ceb115f.chunk.js","mappings":"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","sources":["webpack://it_kamasutra/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/AvatarUploader/AvatarUploader.js","components/Profile/ProfileInfo/ProfileData/ProfileData.js","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://it_kamasutra/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://it_kamasutra/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hocs/WithRouter/WithRouter.js","components/hocs/withAuthRedirect/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__QG8TK\",\"topCoverImageWrapper\":\"ProfileInfo_topCoverImageWrapper__VFBia\",\"topCoverImageWrapperInner\":\"ProfileInfo_topCoverImageWrapperInner__GeEsn\",\"topCoverImage\":\"ProfileInfo_topCoverImage__BGV12\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__SAPPZ\",\"avatarImage\":\"ProfileInfo_avatarImage__qDWb1\",\"uploadAvatarInput\":\"ProfileInfo_uploadAvatarInput__ggkkQ\"};","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = (props) => {\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [status, setStatus] = useState(props.profileStatus);\n\n    useEffect(() => {\n        setStatus(props.profileStatus)\n\n    },[props.profileStatus])\n\n    const toggleEditMode = () => {\n        setIsEditMode(!isEditMode)\n    }\n\n    const onChangeStatus = (e) => {\n        setStatus(e.target.value)\n    }\n\n    const handleBlur = () => {\n        if(status !== props.profileStatus){\n            props.updateProfileStatus(status)\n        }\n        toggleEditMode()\n    }\n\n    return (\n        <>\n            {isEditMode\n                ? <div><input autoFocus onBlur={handleBlur} value={status}\n                              onChange={onChangeStatus}/></div>\n                : <div><span onDoubleClick={toggleEditMode}>Status: {status || '-----'}</span></div>}\n        </>\n\n\n    )\n}\n\nexport default ProfileStatus;","import React from \"react\";\nimport classes from \"../ProfileInfo.module.css\";\n\nfunction AvatarUploader(props) {\n    const handleChangeFile =(e) => {\n        let file = e.target.files[0];\n        if(e.target.files.length > 0){\n            props.saveAvatar(file)\n        }\n    }\n    return(\n        props.isOwner && <input onChange={handleChangeFile} className={classes.uploadAvatarInput} type=\"file\"/>\n    )\n}\n\nexport default AvatarUploader;","import React from \"react\";\n\nconst ProfileData = ({profile,setEditMode}) => {\n    const handleEditMode = () => {\n        setEditMode()\n    }\n    return <div>\n        <button onClick={handleEditMode}>Edit</button>\n        <h4>Full name: {profile.fullName}</h4>\n        <h4>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}</h4>\n        {profile.lookingForAJob && <h4>\n            Professional skills: {profile.lookingForAJobDescription}\n        </h4>}\n        <h4>About me: {profile.aboutMe}</h4>\n        <div>\n            <h5>Contacts: {Object.keys(profile.contacts)\n                .map((key) => {\n                        return <Contact key={key} title={key} value={profile.contacts[key]}/>\n                    }\n                )}\n            </h5>\n\n        </div>\n    </div>\n}\n\nconst Contact = ({title, value}) => {\n    return <div>\n        <b>{title}:</b> {value}\n    </div>\n}\n\nexport default ProfileData;\n","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../../common/Forms/FormControls\";\nimport classes from \"../../../Login/Login.module.css\";\n\nconst ProfileDataForm = ({error,...props}) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <b>Full name:</b>\n            <Field name={\"fullName\"} type=\"text\" placeholder=\"fullName\" component={Input}/>\n        </div>\n        <div>\n            <b>I'm looking for a job:</b>\n            <Field name={\"lookingForAJob\"} type=\"checkbox\" placeholder=\"lookingForAJob\" component={Input}/>\n        </div>\n        <div>\n            <b>My professional skills:</b>\n            <Field name={\"lookingForAJobDescription\"} type=\"text\" placeholder=\"lookingForAJobDescription\" component={Textarea}/>\n        </div>\n        <div>\n            <b>About me:</b>\n            <Field name={\"aboutMe\"} type=\"text\" placeholder=\"aboutMe\" component={Textarea}/>\n        </div>\n        <div>\n            <h5>Contacts: {Object.keys(props.profile.contacts)\n                .map((key) => {\n                        return <div>\n                            <b>{key}</b>\n                            <Field name={`contacts.${key}`} type=\"text\" placeholder={key} component={Input}/>\n                        </div>\n\n                    }\n                )}\n            </h5>\n\n        </div>\n        {error && <div className={classes.errorBox}>\n            <span className={classes.errorTitle}>{error}</span>\n        </div>}\n        <button>Save</button>\n    </form>\n}\n\nlet ReduxFormEditProfile = reduxForm({\n    form: \"profileDataForm\"\n})(ProfileDataForm)\n\nexport default ReduxFormEditProfile;\n","import React, {useState} from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Loader from \"../../common/Loader/Loader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport Avatar from '../../../images/avatar.placeholder.png'\nimport AvatarUploader from \"./AvatarUploader/AvatarUploader\";\nimport ProfileData from \"./ProfileData/ProfileData\";\nimport ReduxFormEditProfile from \"./ProfileData/ProfileDataForm\";\n\nconst ProfileInfo = ({profile,profileStatus,updateProfileStatus,...props}) => {\n    let [editMode, setEditMode] = useState(false);\n    if(!profile) return <Loader isFetching={true}/>\n\n    const onSubmit = (formData) => {\n        props.saveProfileData(formData)\n            .then(() => setEditMode(false))\n            .catch((err) => console.log(err))\n    }\n\n    return (\n        <div className={classes.profileInfo}>\n            <div className={classes.topCoverImageWrapper}>\n                <div className={classes.topCoverImageWrapperInner}>\n                    <img className={classes.topCoverImage} src=\"https://images.unsplash.com/photo-1586184059891-09ad2a30f3ce?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2148&q=80\" alt=\"\"/>\n                </div>\n                <div className={classes.avatarWrapper}>\n                    <img className={classes.avatarImage} src={profile.photos.small || Avatar} alt=\"avatar\"/>\n                    <AvatarUploader isOwner={props.isOwner} saveAvatar={props.saveAvatar}/>\n                </div>\n            </div>\n            <ProfileStatus profileStatus={profileStatus} updateProfileStatus={updateProfileStatus}/>\n            {editMode ? <ReduxFormEditProfile initialValues={profile} profile={profile} onSubmit={onSubmit}/> : <ProfileData setEditMode={() => setEditMode(!editMode)} profile={profile} isOwner={props.isOwner}/>}\n        </div>\n\n    )\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__MZdg2\",\"active\":\"MyPosts_active__jpVbi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"flexCol\":\"Post_flexCol__QQyIp\",\"active\":\"Post_active__Rxs1A\",\"postBox\":\"Post_postBox__79yNJ\",\"avatar\":\"Post_avatar__J150j\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n    let {body} = props.data;\n    return (\n        <div className={classes.item}>\n            <div className={classes.avatar}>\n                <img src=\"https://images.unsplash.com/photo-1541840524505-3d825592d8ac?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=987&q=80\" alt=\"\"/>\n            </div>\n            <div className={classes.flexCol}>\n                <div className={classes.postBox}>\n                    {body}\n                </div>\n                <div>\n                    <button>Like </button>\n                    {props.like_counts} likes\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Post;\n","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../common/Forms/FormControls\";\n\nconst MyPosts = (props) => {\n\n    const onAddPost = (formData) => {\n        console.log(formData,'formData')\n        props.addPostThunkCreator(formData.newPost)\n    }\n\n    return (\n        <div>\n            My posts\n            <WithReduxFormAddNewPost onSubmit={onAddPost}/>\n            <div className={`${classes.item} ${classes.active}`}>New post</div>\n            {props.posts.map(p => <Post data={p}/>)}\n        </div>\n    )\n}\nconst AddNewPostForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newPost\" component={Textarea} validate={required}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nlet WithReduxFormAddNewPost = reduxForm({\n    form: 'addPost'\n})(AddNewPostForm)\nexport default MyPosts;","import {addPostThunkCreator} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n    posts: state.profilePage.posts,\n})\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPostThunkCreator\n})(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <main className=\"content\">\n            <ProfileInfo profile={props.profile} profileStatus={props.profileStatus}\n                         updateProfileStatus={props.updateProfileStatus} isOwner={props.isOwner}\n                         saveAvatar={props.saveAvatar} saveProfileData={props.saveProfileData}/>\n            <MyPostsContainer store={props.store}/>\n        </main>\n\n    )\n}\n\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getProfileDataThunkCreator,\n    getProfileStatusThunkCreator, saveAvatar, saveProfileData,\n    setProfileStatusThunkCreator,\n    setUserProfile\n} from \"../../redux/profileReducer\";\nimport {withRouter} from \"../hocs/WithRouter/WithRouter\";\nimport withRedirect from \"../hocs/withAuthRedirect/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n\n    useEffect(() => {\n        getProfileData()\n    }, [props.userI, props.params.user_id])\n    const getProfileData = () => {\n        let userId = props.params.user_id;\n        if (!userId) userId = props.userId;\n        props.getProfileDataThunkCreator(userId)\n        props.getProfileStatusThunkCreator(userId)\n    }\n    const updateProfileStatus = (status) => {\n        props.setProfileStatusThunkCreator(status)\n    }\n\n    return (\n        <Profile {...props} profile={props.profile}\n                 updateProfileStatus={updateProfileStatus}\n                 isOwner={!props.params.user_id && props.userId}/>\n    )\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    profileStatus: state.profilePage.profileStatus,\n    userId: state.auth.userId,\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        setUserProfile,\n        getProfileDataThunkCreator,\n        getProfileStatusThunkCreator,\n        setProfileStatusThunkCreator,\n        saveAvatar,\n        saveProfileData\n    }),\n    withRedirect,\n    withRouter\n)(ProfileContainer);","import React from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\nexport const  withRouter = (Component) => {\n    return props => <Component {...props} navigate={useNavigate()} params={useParams()} />;\n}","import React from 'react';\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component{\n        render() {\n            if(!this.props.isAuth) return <Navigate to={\"/login\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n    return connect(mapStateToProps)(RedirectComponent);\n}\n\nexport default withAuthRedirect;"],"names":["props","useState","isEditMode","setIsEditMode","profileStatus","status","setStatus","useEffect","toggleEditMode","autoFocus","onBlur","updateProfileStatus","value","onChange","e","target","onDoubleClick","isOwner","file","files","length","saveAvatar","className","classes","type","Contact","title","profile","setEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","reduxForm","form","error","onSubmit","handleSubmit","Field","name","placeholder","component","Input","Textarea","editMode","Loader","isFetching","src","alt","photos","small","Avatar","initialValues","formData","saveProfileData","then","catch","err","console","log","body","data","like_counts","WithReduxFormAddNewPost","validate","required","addPostThunkCreator","newPost","posts","p","connect","state","profilePage","MyPosts","store","compose","userId","auth","setUserProfile","getProfileDataThunkCreator","getProfileStatusThunkCreator","setProfileStatusThunkCreator","withRedirect","Component","navigate","useNavigate","params","useParams","getProfileData","userI","user_id","mapStateToProps","isAuth","RedirectComponent","this","to","React"],"sourceRoot":""}